use num_enum::TryFromPrimitive;

#[allow(non_camel_case_types)]
#[repr(u8)]
#[derive(Debug, Clone, Copy, TryFromPrimitive)]
pub enum VisionCommandType {
    RESERVED = 0x00,
    BINO_INFO = 0x01,
    MONO_INFO = 0x02,
    ULTRASONIC_INFO = 0x03,
    OA_INFO = 0x04,
    RELITIVE_POS = 0x05,
    AVOIDANCE_WARN = 0x06,
    OBSTACLE_INFO = 0x07,
    TAPGO_OA_INFO = 0x08,
    PUSH_VISION_DEBUG_INFO = 0x0A,
    PUSH_CONTROL_DEBUG_INFO = 0x0B,
    PUSH_SDK_CONTROL_CMD = 0x0F,
    ENABLE_TRACKING_TAPTOGO = 0x10,
    PUSH_TARGET_SPEED_POS_INFO = 0x11,
    PUSH_TARGET_POS_INFO = 0x12,
    PUSH_TRAJECTORY = 0x13,
    PUSH_EXPECTED_SPEED_ANGLE = 0x14,
    RECEIVE_FRAME_INFO = 0x15,
    FIXED_WING_CTRL = 0x1d,
    FIXED_WING_STATUS_PUSH = 0x1e,
    FLAT_CHECK = 0x19,
    MARQUEE_PUSH = 0x20,
    TRACKING_CNF_CANCEL = 0x21,
    MOVE_MARQUEE_PUSH = 0x22,
    TRACKING_STATUS_PUSH = 0x23,
    POSITION_PUSH = 0x24,
    FLY_CTL_PUSH = 0x25,
    TAPGO_STATUS_PUSH = 0x26,
    COMMON_CTL_CMD = 0x27,
    GET_PARA_CMD = 0x28,
    SET_PARA_CMD = 0x29,
    COM_STATUS_UPDATE = 0x2A,
    TA_LOCK_UPDATE = 0x2C,
    SMART_LANDING = 0x2D,
    FUNC_LIST_PUSH = 0x2E,
    SENSOR_STATUS_PUSH = 0x2F,
    SELF_CALI = 0x30,
    SELF_CALI_STATE = 0x32,
    QRCODE_MODE = 0x37,
    RC_PACKET = 0x46,
    SET_BUFFER_CONFIG = 0x47,
    GET_BUFFER_CONFIG = 0x48,
    ENABLE_SDK_FUNC = 0xA3,
    DETECTION_MSG_PUSH = 0xA4,
    GET_SDK_FUNC = 0xA5,
    CTRL_PARAM_SET = 0xA8,
    CHASSIS_CTRL_PARAM_SET = 0xA9,
    GIMBAL_CTRL_PARAM_SET = 0xAA,
    LINE_DETECTION_ATTR_SET = 0xAB,
}
